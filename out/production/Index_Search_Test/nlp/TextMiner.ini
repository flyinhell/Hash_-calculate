[NLP_TextMiner]
#指定系統詞庫所在之路徑
systablepath=.\nlp\systable\
#處理時是否把英文字母一律轉小寫
convertEnglishToLowerCase=true
#處理是否把中文全形一律轉半形
convertFullCaseToHalfCase=false
#取詞過程中，遇到英文是否自動Stemming
stemEnglish=true
#取詞過程中，可將過長的內容切成若干個固定長度的區塊，各別處理後再合併。於此指定區塊大小(字元)
blockSize=1000
#中文權威詞演算法使用之門檻值
keywordThres=2
#處理單一中文詞之最大長度字數限制, 太長的詞會被截掉
max_keyword_len=10
#處理單一中文詞之最小長度字數限制, 太短的詞會被略掉
min_keyword_len=2
#處理單一英文單字之最小長度字數限制, 太短的字會被略掉
min_engkeyword_len=3
#是否動態調整中文權威詞演算法使用之門檻值. 若取出之權威詞個數為0, 則自動將門檻值減1,直到權威詞個數不為0或門檻降至1.
adaptiveKeywordThres=true
#是否保留長詞. (若A詞包含B詞, 則刪除B詞包留A詞; 反之則刪除A詞保留B詞).通常長詞比較有意義, 但長詞也比較可能包含贅字與不成詞的字. 因此若是要供人工閱讀, 建議使用短詞, 其準確率與品質會較高
keepLongTerm=false
#是否過濾不要的詞性
filterTerm=true
#是否過濾常用詞 若要產生之權威詞是要供人工閱讀使用, 則建議要過濾,則詞的品質會較高; 若要產生之權威詞是要供機器學習使用, 則建議不要過濾, 則詞的數量會較多
filterFrequentTerm=true
#是否過濾動詞 若要產生之權威詞是要供人工閱讀使用, 則建議要過濾, 則詞的品質會較高;若要產生之權威詞是要供機器學習使用, 則建議不要過濾, 則詞的數量會較多.
filterVerb=true
#是否過濾過短或過長的詞
filterShortOrLongTerm=true
#權威詞的最小得分門檻, 低於此得分之權威詞不會輸出
min_keyword_score=3
#PowerTerm斷詞模組，用逗點隔開不加空白(預設: bigram,parse,engparse,crfseg,bigram_japan,bigram_korea)
PowerTermModule=bigram,parse
#多類別文章權威詞最多傳回之個數, 但若得分都過低時, 所取出之多類別文章權威詞數目可能低於這個數字.若遇到取出不出鍵詞時, 
#有可能是文章內容太短或無個資資訊. (若設定為 -1 則回傳所有多類別文章權威詞)
max_groupkeywordextractor_count=10
#是否去除不同類別重複的權威詞，不同類別中可能有相同的權威詞，以此開關決定是否去除相同的權威詞
#只留下分數最高的那一類別作為該權威詞的代表類別
groupkeywordextractor_isdifferential=true
#各群多篇文章加入TF-IDF資訊
groupkeywordextractor_TFIDF=false
#EntityExtractor最多傳回之個數, 但若得分都過低時, 所取出之屬性詞數目可能低於這個數字.若遇到取出不出鍵詞時, 
#有可能是文章內容太短或無屬性詞資訊 (若設定為 -1 則回傳所有屬性詞)
max_entityextractor_count=30
#處理單一文件之最大長度字數限制, 太長會丟出exception
max_content_len=1048576
#處理單一句子最大長度字數限制, 太長的句子會被截掉
max_sentence_len=120
#處理單一句子最小長度字數限制, 太短的句子會被略掉
min_sentence_len=10
#學習英文內文的組合詞.專注在專有名詞的組合，例如Knowledge Management，而不是生活片語，例如at this time
enableEngCompoundTermMode=false
#Eng Compound Term 組合詞的長度限制
EngCompoundTermLength=2
#Eng Compound Term 組合詞的出現頻率限制
EngCompoundTermFrequency=2
#詞庫黑白名單由DB取代
BWList.DriverName=com.microsoft.sqlserver.jdbc.SQLServerDriver
BWList.SourceName=jdbc:sqlserver://localhost:1433;databasename=WBList
BWList.Account=sa
BWList.Password=*****
# 讀入欄位順序: term,BlackOrWhite
BWList.Statement=SELECT term,blackorwhite from BlackWhiteList where term is not null
#SentimentSetting 情緒是否使用黑白名單#######################################################
isUseBlack&WhiteListOnSentiment=false
#GlobalNLPSetting#####################################################################
# 此值 License rg 檔路徑
RGFilePath=\ENLPUniversalLicense.rg
#console 顯示 debug資訊
debugMode = false

[NLP_Index]
# 此為 log4j 設定檔路徑
# 單一 JVM process 中，可以呼叫多次 init(iniFilePath) method 以初始化，可輸入不同 ini 設定檔。
# 但是此設定值只會被 load 一次，只會以第一個被 load 之 ini 檔內的 LogPropertiesFile 值，做為
# 系統 log4j 的設定檔。
#
# !! 建議值：同一個 JVM 內所引用之不同份 ini 設定檔中，此 LogPropertiesFile 值請保持相同。
#   以免發生無法確定 log4j 設定檔不知道是哪一份的問題。
# !! 預設值：若未正確設定此值，或 ini 檔中無此設定值，則會拋出明確錯誤訊息，
#   並喪失 log 能力，但程式依然可正確執行。
LogPropertiesFile=D:\TextMiner\TextMiner_64bit\conf\TextMiner_log4j.properties

# 此設定值將影響：
#   feed data 後擷取文件摘要動作中 limitStyle 之預設值
#
# !! 建議值：無特別建議
# !! 預設值：若未正確設定此值，或 ini 檔中無此設定值，則會拋出明確錯誤訊息：
#   「setting false, use default : DefaultSummaryLimitStyle = LIMIT_BY_PERCENTAGE
#   
# !! 參數選項：( 意義請參考 Java Doc, enum : SummaryLimitStyle )
#   LIMIT_BY_PERCENTAGE, 
#   LIMIT_BY_CHAR_NUMBER, 
#   LIMIT_BY_SENTENCE_NUMBER, 
#   LIMIT_BY_SENTENCE_SCORE
DefaultSummaryLimitStyle=LIMIT_BY_PERCENTAGE

# 此設定值將影響：
#   1. SummarizerExtractor.getSummary() 取單篇摘要
#   2. feed data 後擷取文件摘要動作
# 此值決定以上兩動作中 limit 之預設值
# 在 1. 中，可由 method : SummarizerExtractor.setLimit() 取代此預設值
# 在 2. 中，完全依賴此值決定 limit
#
# !! 建議值：無特別建議
# !! 預設值：若未正確設定此值，或 ini 檔中無此設定值，則會拋出明確錯誤訊息：
#   「setting false, use default : DefaultSummaryLimit = 60」
DefaultSummaryLimit=60

# 此值為索引檔位置
# !! 建議值：無特別建議
# !! 預設值：因為此為重要設定值，故若未正確設定此值，或 ini 檔中無此設定值，則會拋出明確錯誤訊息：
#   「Please setup "[NLP] DBFileFullPath" in INI file properly !」
#   並且不會給定預設值，將影響各 init(iniFilePath) method 使之伴隨 Exception
DBFileFullPath=D:\TextMiner\TextMiner_64bit\sampledb\db.db


# 此值為 DataFeeder feed 資料後，後端開啟進行 NLP 分析的 multi thread 數量。
# !! 建議值：
#   1. 請略高於機器處理器總核心數，能發揮機器最大效能。
#     例如： 1 process 4 core 請設定此值為 6, 8, 10 皆適合
#   2. 請最少設定為 >= 2 ( 即使單 core )，不建議設定為 1
#  
# !! 預設值：若未正確設定此值，或 ini 檔中無此設定值，則會拋出明確錯誤訊息：
#   「setting false, use default : FeederThreadsNum = 6」
FeederThreadsNum=10

# 以下四值為 DataFeeder feed 資料後，後端批次寫入資料的批次累積數量
# !! 建議值：須依照實際應用情形調整，須與 JVM heap 設定參數 ( -Xmx ) 搭配調整
#   一般情境參考值：若 JVM heap 設定 (-Xmx) 大於 1536m 則此四值一律建議：100000 ~ 150000
#
#   情境：輸入內文大小：平均一篇 500 中文字的新聞內容為例：
#     1. 若 JVM heap 設定 (-Xmx) 大於 1024m 則此四值也建議：100000 ~ 150000
#     2. 若 JVM heap 設定介於最低建議值 ( 此情境最低建議值為 384m ) 到 1024m 之間，建議：50000 ~ 100000
#     3. 若系統較老舊，JVM heap 設定實在必須小於最低建議值 ( 此情境最低建議值為 384m )，
#       則請自行實驗下修此值，使 JVM 避免發生 out of memory Exception
#  
# !! 預設值：若未正確設定此值，或 ini 檔中無此設定值，則會拋出明確錯誤訊息：
#   「setting false, use default : BuffNumLimit_Related = 50000」
#   「setting false, use default : BuffNumLimit_Summary = 50000」
#   「setting false, use default : BuffNumLimit_TmTerm = 50000」
#   「setting false, use default : BuffNumLimit_TermIndoc = 50000」
BuffNumLimit_Related=100000
BuffNumLimit_Summary=100000
BuffNumLimit_TmTerm=100000
BuffNumLimit_TermIndoc=100000

# 此值為 DB 切換機制的監測時間，以「秒」為單位，此值將影響：
#   1. feed 資料後，多久會於查詢 ( ResultManager 各 method ) 時生效
#   2. makeindex 後，多久會於查詢 ( ResultManager 各 method ) 時生效
#
# !! 建議值：10 sec. 以上，以減輕系統 loading
#  
# !! 預設值：若未正確設定此值，或 ini 檔中無此設定值，則會拋出明確錯誤訊息：
#   「setting false, use default : DBSwitchDuration = 1 min.」( 即內定值：60 )
DBSwitchDuration=20

#sample範例使用的access路徑位置
AccessDBFile=D:\TextMiner\TextMiner_64bit\sampledb\db.accdb

[FingerPrint]
SeedDBIP=172.17.17.77
SeedDBPORT=10001
SeedDBAccount=sa
SeedDBPassword=eland1234
SeedDBName=FingerPrintTest
SeedDBTableName=SeedList
minthreshold=4
maxthreshold=10
NumofCompareThread=2